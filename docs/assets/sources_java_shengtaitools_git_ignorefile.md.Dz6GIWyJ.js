import{_ as a,c as s,o as e,aR as i}from"./chunks/framework.C53MdM4B.js";const u=JSON.parse('{"title":".gitignore 忽略文件","description":"","frontmatter":{"title":".gitignore 忽略文件"},"headers":[],"relativePath":"sources/java/shengtaitools/git/ignorefile.md","filePath":"sources/java/shengtaitools/git/ignorefile.md","lastUpdated":1730207255000}'),t={name:"sources/java/shengtaitools/git/ignorefile.md"},l=i(`<h1 id="gitignore-文件中配置忽略文件" tabindex="-1">.gitignore 文件中配置忽略文件 <a class="header-anchor" href="#gitignore-文件中配置忽略文件" aria-label="Permalink to &quot;.gitignore 文件中配置忽略文件&quot;">​</a></h1><blockquote><p>本文展示一下 .gitignore 文件中配置忽略文件的方法</p></blockquote><h2 id="_1-忽略具体的某个文件" tabindex="-1">1.忽略具体的某个文件 <a class="header-anchor" href="#_1-忽略具体的某个文件" aria-label="Permalink to &quot;1.忽略具体的某个文件&quot;">​</a></h2><blockquote><p>直接指定具体的文件名即可。</p></blockquote><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HelloWorld.class</span></span></code></pre></div><h2 id="_2-忽略某一类文件" tabindex="-1">2.忽略某一类文件 <a class="header-anchor" href="#_2-忽略某一类文件" aria-label="Permalink to &quot;2.忽略某一类文件&quot;">​</a></h2><blockquote><p>使用通配符 [*]</p></blockquote><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">*.log</span></span></code></pre></div><h2 id="_3-忽略指定目录下的某个文件" tabindex="-1">3.忽略指定目录下的某个文件 <a class="header-anchor" href="#_3-忽略指定目录下的某个文件" aria-label="Permalink to &quot;3.忽略指定目录下的某个文件&quot;">​</a></h2><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 从根目录开始匹配 ： 绝对路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/com/example/HelloWorld.class</span></span></code></pre></div><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 任意子目录匹配 ： 相对路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">com/example/HelloWorld.class</span></span></code></pre></div><h2 id="_4-忽略指定目录下的某类文件" tabindex="-1">4.忽略指定目录下的某类文件 <a class="header-anchor" href="#_4-忽略指定目录下的某类文件" aria-label="Permalink to &quot;4.忽略指定目录下的某类文件&quot;">​</a></h2><blockquote><p>使用通配符 [*]</p></blockquote><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 从根目录开始匹配 ： 绝对路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/com/example/*.class</span></span></code></pre></div><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 任意子目录匹配 ： 相对路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">com/example/*.class</span></span></code></pre></div><h2 id="_5-忽略某个目录-所有包含的都会被忽略" tabindex="-1">5.忽略某个目录 ： 所有包含的都会被忽略 <a class="header-anchor" href="#_5-忽略某个目录-所有包含的都会被忽略" aria-label="Permalink to &quot;5.忽略某个目录 ： 所有包含的都会被忽略&quot;">​</a></h2><blockquote><p>相对路径的匹配，只要包含就可以</p></blockquote><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">com/example/</span></span></code></pre></div><h2 id="_6-忽略某个目录-从根目录开始匹配" tabindex="-1">6.忽略某个目录 ： 从根目录开始匹配 <a class="header-anchor" href="#_6-忽略某个目录-从根目录开始匹配" aria-label="Permalink to &quot;6.忽略某个目录 ： 从根目录开始匹配&quot;">​</a></h2><blockquote><p>绝对路径的匹配</p></blockquote><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/com/example/</span></span></code></pre></div><h2 id="_7-忽略某个目录-但剔除某个文件" tabindex="-1">7.忽略某个目录，但剔除某个文件 <a class="header-anchor" href="#_7-忽略某个目录-但剔除某个文件" aria-label="Permalink to &quot;7.忽略某个目录，但剔除某个文件&quot;">​</a></h2><blockquote><p>[!] 符号，可以反向选择，即剔除某些文件</p></blockquote><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 1.忽略 com/example/ 目录下的所有 class 文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/com/example/*.class</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 2.但不忽略 HelloWorld.class</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">!/com/example/HelloWorld.class</span></span></code></pre></div>`,24),n=[l];function o(p,h,c,d,r,k){return e(),s("div",null,n)}const b=a(t,[["render",o]]);export{u as __pageData,b as default};
