import{_ as s,c as i,o as a,aR as t}from"./chunks/framework.C53MdM4B.js";const F=JSON.parse('{"title":"版本回退","description":"","frontmatter":{"title":"版本回退"},"headers":[],"relativePath":"sources/java/shengtaitools/git/versionrollback.md","filePath":"sources/java/shengtaitools/git/versionrollback.md","lastUpdated":1730207255000}'),e={name:"sources/java/shengtaitools/git/versionrollback.md"},l=t(`<h1 id="git-中的版本回退" tabindex="-1">Git 中的版本回退 <a class="header-anchor" href="#git-中的版本回退" aria-label="Permalink to &quot;Git 中的版本回退&quot;">​</a></h1><blockquote><p>本文介绍一下版本回退的操作。</p></blockquote><h2 id="_1-git-reset-【常用】" tabindex="-1">1.git reset 【常用】 <a class="header-anchor" href="#_1-git-reset-【常用】" aria-label="Permalink to &quot;1.git reset 【常用】&quot;">​</a></h2><blockquote><p><code>git reset</code> 命令 可以将当前分支的HEAD指针移动到指定的提交，并根据不同的模式处理【工作目录】和【暂存区】。<br></p><ul><li><code>--soft</code> : 仅移动HEAD指针，不改变【工作目录】和【暂存区】。<br></li><li><code>--mixed</code> : （默认），移动HEAD指针，重置【暂存区】，但不改变【工作目录】。<br></li><li><code>--hard</code> : （常用），移动HEAD指针，重置【暂存区】和【工作目录】。<br></li></ul></blockquote><ul><li>情景一 ： 回退到上一个版本</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD^1</span></span></code></pre></div><ul><li>情景二 ： 回退到特定版本 [推荐使用]</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> coommitHash</span></span></code></pre></div><blockquote><p>补充 ： <code>git reflog</code> 命令可以查看所有HEAD的变动记录，包括已经被删除的提交。<br> 在找回 <code>reset --hard</code> 删除的提交时可以用到。</p></blockquote><h2 id="_2-git-checkout" tabindex="-1">2.git checkout <a class="header-anchor" href="#_2-git-checkout" aria-label="Permalink to &quot;2.git checkout&quot;">​</a></h2><ul><li>情景一 ： 切换到某个特定的提交</li></ul><blockquote><p>状态 ： 将 工作目录 和 暂存区 切换到指定的提交。处于 “分离HEAD” 状态。<br> “分离HEAD”状态 ： 不在任何分支上。这种状态下进行的提交不会被任何分支引用。<br> 作用 ： 主要是用于查看某个历史版本的状态。</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target-commit-hash</span></span></code></pre></div><blockquote><p>补充 ： 从“分离HEAD”状态切换到某个分支上，可以使用 <code>git checkout branchName</code> 命令。</p></blockquote><ul><li>情景二 ： 根据某个特定的提交创建并切换新的分支</li></ul><blockquote><p>这个是比较常用的创建分支的一个命令。</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newBranchName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target-commit-hash</span></span></code></pre></div><ul><li>情景三 ： 恢复单个文件到某个提交的状态</li></ul><blockquote><p>作用 ： 适用于恢复某个文件到特定的版本。</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target-commit-hash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file-path</span></span></code></pre></div><ul><li>情景四 ： 恢复单个文件到最新的提交状态</li></ul><blockquote><p>作用 ： 将指定文件恢复到最新提交的状态，丢弃工作目录中的更改。</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file-path</span></span></code></pre></div><h2 id="_3-git-revert" tabindex="-1">3.git revert <a class="header-anchor" href="#_3-git-revert" aria-label="Permalink to &quot;3.git revert&quot;">​</a></h2><blockquote><p><code>git revert</code> 命令可以【撤销提交】，但是不会删除提交记录。<br> 效果 ： 会【创建一个新的提交】来撤销指定的提交。</p></blockquote><ul><li>基本用法</li></ul><blockquote><p>指定提交版本的hash值来撤销版本。</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 撤销单个指定版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targetCommitHash</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 撤销多个指定的版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targetCommitHash1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targetCommitHash2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ......</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 撤销多个连续的版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targetCommitHashStart..targetCommitHashEnd</span></span></code></pre></div><ul><li>高级用法</li></ul><blockquote><p>撤销合并提交 or 强制撤销（忽略冲突）</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 撤销合并提交 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1、创建一个新的提交；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2、撤销 targetCommitHash 这一次的提交内容；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3、保留 第 parent-number 个父提交。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parent-number</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targetCommitHash</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 取消自动提交步骤，需要手动commit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1、将指定提交的更改应用到 工作目录 和 暂存区；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2、不会立即创建新的提交记录；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3、此时如果有冲突，可以手动修改；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4、没有问题后，执行 add &amp; commit 进行手动提交。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> targetCommitHash</span></span></code></pre></div>`,34),h=[l];function n(p,k,o,c,r,d){return a(),i("div",null,h)}const u=s(e,[["render",n]]);export{F as __pageData,u as default};
