import{_ as s,c as a,o as e,aR as i}from"./chunks/framework.DjTIwazY.js";const k=JSON.parse('{"title":"忽略文件的版本管理","description":"","frontmatter":{"title":"忽略文件的版本管理"},"headers":[],"relativePath":"sources/java/shengtaitools/git/versioncontrol.md","filePath":"sources/java/shengtaitools/git/versioncontrol.md","lastUpdated":1715393963000}'),t={name:"sources/java/shengtaitools/git/versioncontrol.md"},l=i(`<h1 id="忽略文件的版本管理" tabindex="-1">忽略文件的版本管理 <a class="header-anchor" href="#忽略文件的版本管理" aria-label="Permalink to &quot;忽略文件的版本管理&quot;">​</a></h1><p>本文介绍一下 Git 中忽略文件的版本管理的处理方式。</p><div class="tip custom-block"><p class="custom-block-title">核心</p><p>对 <code>.gitignore</code> 文件进行配置。</p></div><h2 id="忽略未被管理的新文件" tabindex="-1">忽略未被管理的新文件 <a class="header-anchor" href="#忽略未被管理的新文件" aria-label="Permalink to &quot;忽略未被管理的新文件&quot;">​</a></h2><blockquote><p>未被管理的文件，例如，是一个新增的文件 HelloWorld.java。<br> 此时，只需要在 <code>.gitignore</code> 文件中添加该文件名，就不会被 git 管理了。</p></blockquote><blockquote><p>下面是 .gitignore 的文件内容：</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>...... 其他的被忽略文件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>HelloWorld.java</span></span></code></pre></div><h2 id="忽略已被管理的文件" tabindex="-1">忽略已被管理的文件 <a class="header-anchor" href="#忽略已被管理的文件" aria-label="Permalink to &quot;忽略已被管理的文件&quot;">​</a></h2><blockquote><p>已经被纳入版本管理的文件，例如，文件 HelloWorld.java。<br> 直接配置 <code>.gitignore</code> 文件已经不会生效了。<br> 此时，需要先将文件<code>剔除</code>，然后再配置<code>.gitignore</code>文件。<br></p></blockquote><blockquote><p>执行以下三个步骤即可 ：</p></blockquote><ul><li>1、从git中剔除</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HelloWorld.java</span></span></code></pre></div><ul><li>2、配置 <code>.gitignore</code> 文件</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>...... 其他的被忽略文件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>HelloWorld.java</span></span></code></pre></div><ul><li>3、提交版本</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;剔除HelloWorld.java文件&quot;</span></span></code></pre></div>`,16),o=[l];function n(p,c,d,r,h,g){return e(),a("div",null,o)}const v=s(t,[["render",n]]);export{k as __pageData,v as default};
